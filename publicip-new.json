{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "metadata": {
        "description": "Location"
      }
    },
    "publicIPAddressResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Resource Group"
      }
    },
    "publicIPAddressType": {
      "type": "string",
      "metadata": {
        "description": "Public IP Address Type (e.g. Static or Dynamic)"
      }
    },
    "publicIPAddressName": {
      "type": "string",
      "metadata": {
        "description": "Public IP Address Name"
      }
    },
    "dnsName": {
      "type": "string",
      "metadata": {
        "description": "Public IP DNS prefix (e.g. [dnsName].region.cloudapp.azure.com)"
      }
    },
    "publicIPAddress2Name": {
      "type": "string",
      "metadata": {
        "description": "Public IP Address Name"
      }
    },
    "dns2Name": {
      "type": "string",
      "metadata": {
        "description": "Public IP DNS prefix (e.g. [dnsName].region.cloudapp.azure.com)"
      }
    },
    "publicIPAddress3Name": {
      "type": "string",
      "metadata": {
        "description": "Public IP Address Name"
      }
    },
    "dns3Name": {
      "type": "string",
      "metadata": {
        "description": "Public IP DNS prefix (e.g. [dnsName].region.cloudapp.azure.com)"
      }
    },
    "publicIPAddress4Name": {
      "type": "string",
      "metadata": {
        "description": "Public IP Address Name"
      }
    },
    "dns4Name": {
      "type": "string",
      "metadata": {
        "description": "Public IP DNS prefix (e.g. [dnsName].region.cloudapp.azure.com)"
      }
    },
    "publicIPAddress5Name": {
      "type": "string",
      "metadata": {
        "description": "Public IP Address Name"
      }
    },
    "dns5Name": {
      "type": "string",
      "metadata": {
        "description": "Public IP DNS prefix (e.g. [dnsName].region.cloudapp.azure.com)"
      }
    },
    "publicIPAddress6Name": {
      "type": "string",
      "metadata": {
        "description": "Public IP Address Name"
      }
    },
    "dns6Name": {
      "type": "string",
      "metadata": {
        "description": "Public IP DNS prefix (e.g. [dnsName].region.cloudapp.azure.com)"
      }
    },
    "publicIPAddress7Name": {
      "type": "string",
      "metadata": {
        "description": "Public IP Address Name"
      }
    },
    "dns7Name": {
      "type": "string",
      "metadata": {
        "description": "Public IP DNS prefix (e.g. [dnsName].region.cloudapp.azure.com)"
      }
    },
    "publicIPAddress8Name": {
      "type": "string",
      "metadata": {
        "description": "Public IP Address Name"
      }
    },
    "dns8Name": {
      "type": "string",
      "metadata": {
        "description": "Public IP DNS prefix (e.g. [dnsName].region.cloudapp.azure.com)"
      }
    },
    "publicIPAddress9Name": {
      "type": "string",
      "metadata": {
        "description": "Public IP Address Name"
      }
    },
    "dns9Name": {
      "type": "string",
      "metadata": {
        "description": "Public IP DNS prefix (e.g. [dnsName].region.cloudapp.azure.com)"
      }
    },
    "publicIPAddress10Name": {
      "type": "string",
      "metadata": {
        "description": "Public IP Address Name"
      }
    },
    "dns10Name": {
      "type": "string",
      "metadata": {
        "description": "Public IP DNS prefix (e.g. [dnsName].region.cloudapp.azure.com)"
      }
    },
    "publicIPAddress11Name": {
      "type": "string",
      "metadata": {
        "description": "Public IP Address Name"
      }
    },
    "dns11Name": {
      "type": "string",
      "metadata": {
        "description": "Public IP DNS prefix (e.g. [dnsName].region.cloudapp.azure.com)"
      }
    },
    "publicIPAddress12Name": {
      "type": "string",
      "metadata": {
        "description": "Public IP Address Name"
      }
    },
    "dns12Name": {
      "type": "string",
      "metadata": {
        "description": "Public IP DNS prefix (e.g. [dnsName].region.cloudapp.azure.com)"
      }
    },
    "VMName": {
      "type": "string",
      "metadata": {
        "description": "FortiGate name"
      }
    },
    "VM2Name": {
      "type": "string",
      "metadata": {
        "description": "FortiGate name"
      }
    },
    "vmNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "VM set prefix"
      }
    },
    "VNetName": {
      "type": "string",
      "metadata": {
        "description": "FortiGate name"
      }
    },
    "FGPubFacingAddress": {
      "type": "string",
      "metadata": {
        "description": "Outside address of FortiGate A"
      }
    },
    "FGBPubFacingAddress": {
      "type": "string",
      "metadata": {
        "description": "Outside address of FortiGate B"
      }
    },
    "subnet1Ref": {
      "type": "string",
      "metadata": {
        "description": "subnet 1 reference ID"
      }
    },
    "network_NIC_fg11_Name": {
      "type": "string",
      "metadata": {
        "description": "FortiGate A NIC0 interface name"
      }
    },
    "network_NIC_fg21_Name": {
      "type": "string",
      "metadata": {
        "description": "FortiGate B NIC0 interface name"
      }
    }
  },
  "variables": {
    "publicIPID": "[resourceID('Microsoft.Network/publicIPAddresses',parameters('publicIPAddressName'))]",
    "publicIP2ID": "[resourceID('Microsoft.Network/publicIPAddresses',parameters('publicIPAddress2Name'))]",
    "publicIP3ID": "[resourceID('Microsoft.Network/publicIPAddresses',parameters('publicIPAddress3Name'))]",
    "publicIP4ID": "[resourceID('Microsoft.Network/publicIPAddresses',parameters('publicIPAddress4Name'))]",
    "publicIP5ID": "[resourceID('Microsoft.Network/publicIPAddresses',parameters('publicIPAddress5Name'))]",
    "publicIP6ID": "[resourceID('Microsoft.Network/publicIPAddresses',parameters('publicIPAddress6Name'))]",
    "publicIP7ID": "[resourceID('Microsoft.Network/publicIPAddresses',parameters('publicIPAddress7Name'))]",
    "publicIP8ID": "[resourceID('Microsoft.Network/publicIPAddresses',parameters('publicIPAddress8Name'))]",
    "publicIP9ID": "[resourceID('Microsoft.Network/publicIPAddresses',parameters('publicIPAddress9Name'))]",
    "publicIP10ID": "[resourceID('Microsoft.Network/publicIPAddresses',parameters('publicIPAddress10Name'))]",
    "publicIP11ID": "[resourceID('Microsoft.Network/publicIPAddresses',parameters('publicIPAddress11Name'))]",
    "publicIP12ID": "[resourceID('Microsoft.Network/publicIPAddresses',parameters('publicIPAddress12Name'))]",
    "network_LB_Public_NatRule_IKE500_fg1_Name": "[concat(parameters('VMName'),'IKE500')]",
    "network_LB_Public_NatRule_IKE500_fg2_Name": "[concat(parameters('VM2Name'),'IKE500')]",
    "network_LB_Public_NatRule_IKE500_fg1_Id": "[concat(variables('network_LB_Public_Id'),'/inboundNatRules/',variables('network_LB_Public_NatRule_IKE500_fg1_Name'))]",
    "network_LB_Public_NatRule_IKE500_fg2_Id": "[concat(variables('network_LB_Public_Id'),'/inboundNatRules/',variables('network_LB_Public_NatRule_IKE500_fg2_Name'))]",
    "network_LB_Public_NatRule_IKE4500_fg1_Name": "[concat(parameters('VMName'),'IKE4500')]",
    "network_LB_Public_NatRule_IKE4500_fg2_Name": "[concat(parameters('VM2Name'),'IKE4500')]",
    "network_LB_Public_NatRule_IKE4500_fg1_Id": "[concat(variables('network_LB_Public_Id'),'/inboundNatRules/',variables('network_LB_Public_NatRule_IKE4500_fg1_Name'))]",
    "network_LB_Public_NatRule_IKE4500_fg2_Id": "[concat(variables('network_LB_Public_Id'),'/inboundNatRules/',variables('network_LB_Public_NatRule_IKE4500_fg2_Name'))]",
    "network_LB_Public_NatRule_L2TP1701_fg1_Name": "[concat(parameters('VMName'),'L2TP1701')]",
    "network_LB_Public_NatRule_L2TP1701_fg2_Name": "[concat(parameters('VM2Name'),'L2TP1701')]",
    "network_LB_Public_NatRule_L2TP1701_fg1_Id": "[concat(variables('network_LB_Public_Id'),'/inboundNatRules/',variables('network_LB_Public_NatRule_L2TP1701_fg1_Name'))]",
    "network_LB_Public_NatRule_L2TP1701_fg2_Id": "[concat(variables('network_LB_Public_Id'),'/inboundNatRules/',variables('network_LB_Public_NatRule_L2TP1701_fg2_Name'))]",
    "network_LB_Public_NatRule_FGAdminInit_fg1_Name": "[concat(parameters('VMName'),'FGAdminInit')]",
    "network_LB_Public_NatRule_FGAdminInit_fg1_Id": "[concat(variables('network_LB_Public_Id'),'/inboundNatRules/',variables('network_LB_Public_NatRule_FGAdminInit_fg1_Name'))]",
    "network_LB_Public_NatRule_FGAdminPerm_fg1_Name": "[concat(parameters('VMName'),'FGAdminPerm')]",
    "network_LB_Public_NatRule_FGAdminPerm_fg1_Id": "[concat(variables('network_LB_Public_Id'),'/inboundNatRules/',variables('network_LB_Public_NatRule_FGAdminPerm_fg1_Name'))]",
    "network_LB_Public_NatRule_FMtoFG_fg1_Name": "[concat(parameters('VMName'),'FGAdminByFM')]",
    "network_LB_Public_NatRule_FMtoFG_fg1_Id": "[concat(variables('network_LB_Public_Id'),'/inboundNatRules/',variables('network_LB_Public_NatRule_FMtoFG_fg1_Name'))]",
    "network_LB_Public_NatRule_SSH_fg1_Name": "[concat(parameters('VMName'),'SSH')]",
    "network_LB_Public_NatRule_SSH_fg1_Id": "[concat(variables('network_LB_Public_Id'),'/inboundNatRules/',variables('network_LB_Public_NatRule_SSH_fg1_Name'))]",
    "network_LB_Public_NatRule_FGAdminInit_fg2_Name": "[concat(parameters('VM2Name'),'FGAdminInit')]",
    "network_LB_Public_NatRule_FGAdminInit_fg2_Id": "[concat(variables('network_LB_Public_Id'),'/inboundNatRules/',variables('network_LB_Public_NatRule_FGAdminInit_fg2_Name'))]",
    "network_LB_Public_NatRule_FGAdminPerm_fg2_Name": "[concat(parameters('VM2Name'),'FGAdminPerm')]",
    "network_LB_Public_NatRule_FGAdminPerm_fg2_Id": "[concat(variables('network_LB_Public_Id'),'/inboundNatRules/',variables('network_LB_Public_NatRule_FGAdminPerm_fg2_Name'))]",
    "network_LB_Public_NatRule_FMtoFG_fg2_Name": "[concat(parameters('VM2Name'),'FGAdminByFM')]",
    "network_LB_Public_NatRule_FMtoFG_fg2_Id": "[concat(variables('network_LB_Public_Id'),'/inboundNatRules/',variables('network_LB_Public_NatRule_FMtoFG_fg2_Name'))]",
    "network_LB_Public_NatRule_SSH_fg2_Name": "[concat(parameters('VM2Name'),'SSH')]",
    "network_LB_Public_NatRule_SSH_fg2_Id": "[concat(variables('network_LB_Public_Id'),'/inboundNatRules/',variables('network_LB_Public_NatRule_SSH_fg2_Name'))]",
    "network_LB_Public_Name": "[concat(parameters('vmNamePrefix'),'publicLB')]",
    "network_LB_Public_Id": "[resourceId('Microsoft.Network/loadBalancers',variables('network_LB_Public_Name'))]",
    "network_LB_Public_FEName": "[concat(parameters('VMName'),'publicLBFE')]",
    "network_LB_Public_FEId": "[concat(variables('network_LB_Public_Id'),'/frontendIPConfigurations/',variables('network_LB_Public_FEName'))]",
    "network_LB_Public_FE2Name": "[concat(parameters('VMName'),'publicLBFE2')]",
    "network_LB_Public_FE2Id": "[concat(variables('network_LB_Public_Id'),'/frontendIPConfigurations/',variables('network_LB_Public_FE2Name'))]",
    "network_LB_Public_BEName": "[concat(parameters('VMName'),'publicLBBE')]",
    "network_LB_Public_BEId": "[concat(variables('network_LB_Public_Id'),'/backendAddressPools/',variables('network_LB_Public_BEName'))]",
    "apiVer": "2015-06-15"
  },
  "resources": [
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddressName')]",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[parameters('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsName')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddress2Name')]",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[parameters('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dns2Name')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddress3Name')]",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[parameters('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dns3Name')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddress4Name')]",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[parameters('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dns4Name')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddress5Name')]",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[parameters('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dns5Name')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddress6Name')]",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[parameters('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dns6Name')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddress7Name')]",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[parameters('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dns7Name')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddress8Name')]",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[parameters('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dns8Name')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddress9Name')]",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[parameters('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dns9Name')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddress10Name')]",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[parameters('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dns10Name')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddress11Name')]",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[parameters('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dns11Name')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddress12Name')]",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[parameters('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dns12Name')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "name": "[variables('network_LB_Public_Name')]",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[variables('publicIPID')]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('network_LB_Public_FEName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('publicIPID')]"
              }
            }
          },
          {
            "name": "[variables('network_LB_Public_FE2Name')]",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('publicIP2ID')]"
              }
            }
          },
          {
            "name": "[variables('network_LB_Public_FE3Name')]",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('publicIP3ID')]"
              }
            }
          },
          {
            "name": "[variables('network_LB_Public_FE4Name')]",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('publicIP4ID')]"
              }
            }
          },
          {
            "name": "[variables('network_LB_Public_FE5Name')]",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('publicIP5ID')]"
              }
            }
          },
          {
            "name": "[variables('network_LB_Public_FE6Name')]",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('publicIP6ID')]"
              }
            }
          },
          {
            "name": "[variables('network_LB_Public_FE7Name')]",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('publicIP7ID')]"
              }
            }
          },
          {
            "name": "[variables('network_LB_Public_FE8Name')]",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('publicIP8ID')]"
              }
            }
          },
          {
            "name": "[variables('network_LB_Public_FE9Name')]",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('publicIP9ID')]"
              }
            }
          },
          {
            "name": "[variables('network_LB_Public_FE10Name')]",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('publicIP10ID')]"
              }
            }
          },
          {
            "name": "[variables('network_LB_Public_FE11Name')]",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('publicIP11ID')]"
              }
            }
          },
          {
            "name": "[variables('network_LB_Public_FE12Name')]",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('publicIP12ID')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('network_LB_Public_BEName')]"
          }
        ],
        "inboundNatRules": [
          {
            "name": "[variables('network_LB_Public_NatRule_IKE500_fg1_Name')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('network_LB_Public_FEId')]"
              },
              "protocol": "udp",
              "frontendPort": 500,
              "backendPort": 500,
              "enableFloatingIP": false
            }
          },
          {
            "name": "[variables('network_LB_Public_NatRule_IKE4500_fg1_Name')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('network_LB_Public_FEId')]"
              },
              "protocol": "udp",
              "frontendPort": 4500,
              "backendPort": 4500,
              "enableFloatingIP": false
            }
          },
          {
            "name": "[variables('network_LB_Public_NatRule_SSH_fg1_Name')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('network_LB_Public_FEId')]"
              },
              "protocol": "tcp",
              "frontendPort": 22,
              "backendPort": 22,
              "enableFloatingIP": false
            }
          },
          {
            "name": "[variables('network_LB_Public_NatRule_FGAdminPerm_fg1_Name')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('network_LB_Public_FEId')]"
              },
              "protocol": "tcp",
              "frontendPort": 8443,
              "backendPort": 443,
              "enableFloatingIP": false
            }
          },
          {
            "name": "[variables('network_LB_Public_NatRule_FMtoFG_fg1_Name')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('network_LB_Public_FEId')]"
              },
              "protocol": "tcp",
              "frontendPort": 541,
              "backendPort": 541,
              "enableFloatingIP": false
            }
          },
          {
            "name": "[variables('network_LB_Public_NatRule_IKE500_fg2_Name')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('network_LB_Public_FE2Id')]"
              },
              "protocol": "udp",
              "frontendPort": 500,
              "backendPort": 500,
              "enableFloatingIP": false
            }
          },
          {
            "name": "[variables('network_LB_Public_NatRule_IKE4500_fg2_Name')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('network_LB_Public_FE2Id')]"
              },
              "protocol": "udp",
              "frontendPort": 4500,
              "backendPort": 4500,
              "enableFloatingIP": false
            }
          },
          {
            "name": "[variables('network_LB_Public_NatRule_SSH_fg2_Name')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('network_LB_Public_FE2Id')]"
              },
              "protocol": "tcp",
              "frontendPort": 22,
              "backendPort": 22,
              "enableFloatingIP": false
            }
          },
          {
            "name": "[variables('network_LB_Public_NatRule_FGAdminPerm_fg2_Name')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('network_LB_Public_FE2Id')]"
              },
              "protocol": "tcp",
              "frontendPort": 8443,
              "backendPort": 443,
              "enableFloatingIP": false
            }
          },
          {
            "name": "[variables('network_LB_Public_NatRule_FMtoFG_fg2_Name')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('network_LB_Public_FE2Id')]"
              },
              "protocol": "tcp",
              "frontendPort": 541,
              "backendPort": 541,
              "enableFloatingIP": false
            }
          }
        ],
        "loadBalancingRules": [
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('network_LB_Public_FEId')]"
              },
              "backendAddressPool": {
                "id": "[variables('network_LB_Public_BEId')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('network_LB_Public_Name')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "idleTimeoutInMinutes": 15
            },
            "Name": "FE1LBRule80"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('network_LB_Public_FE2Id')]"
              },
              "backendAddressPool": {
                "id": "[variables('network_LB_Public_BEId')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('network_LB_Public_Name')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 8002,
              "idleTimeoutInMinutes": 15
            },
            "Name": "FE2LBRule80"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('network_LB_Public_FE3Id')]"
              },
              "backendAddressPool": {
                "id": "[variables('network_LB_Public_BEId')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('network_LB_Public_Name')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 8003,
              "idleTimeoutInMinutes": 15
            },
            "Name": "FE3LBRule80"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('network_LB_Public_FE4Id')]"
              },
              "backendAddressPool": {
                "id": "[variables('network_LB_Public_BEId')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('network_LB_Public_Name')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 8004,
              "idleTimeoutInMinutes": 15
            },
            "Name": "FE4LBRule80"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('network_LB_Public_FE5Id')]"
              },
              "backendAddressPool": {
                "id": "[variables('network_LB_Public_BEId')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('network_LB_Public_Name')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 8005,
              "idleTimeoutInMinutes": 15
            },
            "Name": "FE5LBRule80"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('network_LB_Public_FE6Id')]"
              },
              "backendAddressPool": {
                "id": "[variables('network_LB_Public_BEId')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('network_LB_Public_Name')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 8006,
              "idleTimeoutInMinutes": 15
            },
            "Name": "FE6LBRule80"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('network_LB_Public_FE7Id')]"
              },
              "backendAddressPool": {
                "id": "[variables('network_LB_Public_BEId')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('network_LB_Public_Name')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 8007,
              "idleTimeoutInMinutes": 15
            },
            "Name": "FE7LBRule80"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('network_LB_Public_FE8Id')]"
              },
              "backendAddressPool": {
                "id": "[variables('network_LB_Public_BEId')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('network_LB_Public_Name')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 8008,
              "idleTimeoutInMinutes": 15
            },
            "Name": "FE8LBRule80"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('network_LB_Public_FE9Id')]"
              },
              "backendAddressPool": {
                "id": "[variables('network_LB_Public_BEId')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('network_LB_Public_Name')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 8009,
              "idleTimeoutInMinutes": 15
            },
            "Name": "FE9LBRule80"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('network_LB_Public_FE10Id')]"
              },
              "backendAddressPool": {
                "id": "[variables('network_LB_Public_BEId')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('network_LB_Public_Name')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 8010,
              "idleTimeoutInMinutes": 15
            },
            "Name": "FE10LBRule80"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('network_LB_Public_FE11Id')]"
              },
              "backendAddressPool": {
                "id": "[variables('network_LB_Public_BEId')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('network_LB_Public_Name')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 8011,
              "idleTimeoutInMinutes": 15
            },
            "Name": "FE11LBRule80"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('network_LB_Public_FE12Id')]"
              },
              "backendAddressPool": {
                "id": "[variables('network_LB_Public_BEId')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('network_LB_Public_Name')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 8012,
              "idleTimeoutInMinutes": 15
            },
            "Name": "FE12LBRule80"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('network_LB_Public_FEId')]"
              },
              "backendAddressPool": {
                "id": "[variables('network_LB_Public_BEId')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('network_LB_Public_Name')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 443,
              "backendPort": 44301,
              "idleTimeoutInMinutes": 15
            },
            "Name": "FE1LBRule443"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('network_LB_Public_FE2Id')]"
              },
              "backendAddressPool": {
                "id": "[variables('network_LB_Public_BEId')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('network_LB_Public_Name')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 443,
              "backendPort": 44302,
              "idleTimeoutInMinutes": 15
            },
            "Name": "FE2LBRule443"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('network_LB_Public_FE3Id')]"
              },
              "backendAddressPool": {
                "id": "[variables('network_LB_Public_BEId')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('network_LB_Public_Name')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 443,
              "backendPort": 44303,
              "idleTimeoutInMinutes": 15
            },
            "Name": "FE3LBRule443"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('network_LB_Public_FE4Id')]"
              },
              "backendAddressPool": {
                "id": "[variables('network_LB_Public_BEId')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('network_LB_Public_Name')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 443,
              "backendPort": 44304,
              "idleTimeoutInMinutes": 15
            },
            "Name": "FE4LBRule443"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('network_LB_Public_FE5Id')]"
              },
              "backendAddressPool": {
                "id": "[variables('network_LB_Public_BEId')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('network_LB_Public_Name')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 443,
              "backendPort": 44305,
              "idleTimeoutInMinutes": 15
            },
            "Name": "FE5LBRule443"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('network_LB_Public_FE6Id')]"
              },
              "backendAddressPool": {
                "id": "[variables('network_LB_Public_BEId')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('network_LB_Public_Name')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 443,
              "backendPort": 44306,
              "idleTimeoutInMinutes": 15
            },
            "Name": "FE6LBRule443"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('network_LB_Public_FE7Id')]"
              },
              "backendAddressPool": {
                "id": "[variables('network_LB_Public_BEId')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('network_LB_Public_Name')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 443,
              "backendPort": 44307,
              "idleTimeoutInMinutes": 15
            },
            "Name": "FE7LBRule443"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('network_LB_Public_FE8Id')]"
              },
              "backendAddressPool": {
                "id": "[variables('network_LB_Public_BEId')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('network_LB_Public_Name')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 443,
              "backendPort": 44308,
              "idleTimeoutInMinutes": 15
            },
            "Name": "FE8LBRule443"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('network_LB_Public_FE9Id')]"
              },
              "backendAddressPool": {
                "id": "[variables('network_LB_Public_BEId')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('network_LB_Public_Name')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 443,
              "backendPort": 44309,
              "idleTimeoutInMinutes": 15
            },
            "Name": "FE9LBRule443"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('network_LB_Public_FE10Id')]"
              },
              "backendAddressPool": {
                "id": "[variables('network_LB_Public_BEId')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('network_LB_Public_Name')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 443,
              "backendPort": 44310,
              "idleTimeoutInMinutes": 15
            },
            "Name": "FE10LBRule443"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('network_LB_Public_FE11Id')]"
              },
              "backendAddressPool": {
                "id": "[variables('network_LB_Public_BEId')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('network_LB_Public_Name')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 443,
              "backendPort": 44311,
              "idleTimeoutInMinutes": 15
            },
            "Name": "FE11LBRule443"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('network_LB_Public_FE12Id')]"
              },
              "backendAddressPool": {
                "id": "[variables('network_LB_Public_BEId')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('network_LB_Public_Name')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 443,
              "backendPort": 44312,
              "idleTimeoutInMinutes": 15
            },
            "Name": "FE12LBRule443"
          }
        ],
        "probes": [
          {
            "properties": {
              "protocol": "Tcp",
              "port": 22,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            },
            "name": "lbprobe"
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVer')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('network_NIC_fg11_Name')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[variables('network_LB_Public_Id')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('FGPubFacingAddress')]",
              "subnet": {
                "id": "[parameters('subnet1Ref')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[variables('network_LB_Public_BEId')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[variables('network_LB_Public_NatRule_IKE500_fg1_Id')]"
                },
                {
                  "id": "[variables('network_LB_Public_NatRule_IKE4500_fg1_Id')]"
                },
                {
                  "id": "[variables('network_LB_Public_NatRule_SSH_fg1_Id')]"
                },
                {
                  "id": "[variables('network_LB_Public_NatRule_FGAdminPerm_fg1_Id')]"
                },
                {
                  "id": "[variables('network_LB_Public_NatRule_FMtoFG_fg1_Id')]"
                }
              ]
            }
          }
        ],
        "enableIPForwarding": true
      }
    },
    {
      "apiVersion": "[variables('apiVer')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('network_NIC_fg21_Name')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[variables('network_LB_Public_Id')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('FGBPubFacingAddress')]",
              "subnet": {
                "id": "[parameters('subnet1Ref')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[variables('network_LB_Public_BEId')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[variables('network_LB_Public_NatRule_IKE500_fg2_Id')]"
                },
                {
                  "id": "[variables('network_LB_Public_NatRule_IKE4500_fg2_Id')]"
                },
                {
                  "id": "[variables('network_LB_Public_NatRule_SSH_fg2_Id')]"
                },
                {
                  "id": "[variables('network_LB_Public_NatRule_FGAdminPerm_fg2_Id')]"
                },
                {
                  "id": "[variables('network_LB_Public_NatRule_FMtoFG_fg2_Id')]"
                }
              ]
            }
          }
        ],
        "enableIPForwarding": true
      }
    }
  ],
    "outputs": {
    }
}
